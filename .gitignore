# UnitySide
# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore

/UnitySide/[Ll]ibrary/
/UnitySide/[Tt]emp/
/UnitySide/[Oo]bj/
/UnitySide/[Bb]uild/
/UnitySide/[Bb]uilds/
/UnitySide/[Ll]ogs/
/UnitySide/[Uu]ser[Ss]ettings/

# MemoryCaptures can get excessive in size.
# They also could contain extremely sensitive data
/UnitySide/[Mm]emoryCaptures/

# Recordings can get excessive in size
/UnitySide/[Rr]ecordings/

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
/UnitySide/[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
/UnitySide/.vs/

# Gradle cache directory
/UnitySide/.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.aab
*.unitypackage
*.app

# Crashlytics generated file
crashlytics-build.properties

# Packed Addressables
/UnitySide/[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*

# Temporary auto-generated Android Assets
/UnitySide/[Aa]ssets/[Ss]treamingAssets/aa.meta
/UnitySide/[Aa]ssets/[Ss]treamingAssets/aa/*



# PythonSide
# https://github.com/github/gitignore/blob/main/Python.gitignore

# Byte-compiled / optimized / DLL files
/PySide/__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
/PySide/.Python
/PySide/build/
/PySide/develop-eggs/
/PySide/dist/
/PySide/downloads/
/PySide/eggs/
/PySide/.eggs/
/PySide/lib/
/PySide/lib64/
/PySide/parts/
/PySide/sdist/
/PySide/var/
/PySide/wheels/
/PySide/share/python-wheels/
*.egg-info/
/PySide/.installed.cfg
*.egg
/PySide/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
/PySide/pip-log.txt
/PySide/pip-delete-this-directory.txt

# Unit test / coverage reports
/PySide/htmlcov/
/PySide/.tox/
/PySide/.nox/
/PySide/.coverage
/PySide/.coverage.*
/PySide/.cache
/PySide/nosetests.xml
/PySide/coverage.xml
*.cover
*.py,cover
/PySide/.hypothesis/
/PySide/.pytest_cache/
/PySide/cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
/PySide/local_settings.py
/PySide/db.sqlite3
/PySide/db.sqlite3-journal

# Flask stuff:
/PySide/instance/
/PySide/.webassets-cache

# Scrapy stuff:
/PySide/.scrapy

# Sphinx documentation
/PySide/docs/_build/

# PyBuilder
/PySide/.pybuilder/
/PySide/target/

# Jupyter Notebook
/PySide/.ipynb_checkpoints

# IPython
/PySide/profile_default/
/PySide/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
/PySide/.pdm.toml
/PySide/.pdm-python
/PySide/.pdm-build/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
/PySide/__pypackages__/

# Celery stuff
/PySide/celerybeat-schedule
/PySide/celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
/PySide/.env
/PySide/.venv
/PySide/env/
/PySide/venv/
/PySide/ENV/
/PySide/env.bak/
/PySide/venv.bak/

# Spyder project settings
/PySide/.spyderproject
/PySide/.spyproject

# Rope project settings
/PySide/.ropeproject

# mkdocs documentation
/PySide/site

# mypy
/PySide/.mypy_cache/
/PySide/.dmypy.json
/PySide/dmypy.json

# Pyre type checker
/PySide/.pyre/

# pytype static type analyzer
/PySide/.pytype/

# Cython debug symbols
/PySide/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/

# Custom virtual environments
/PySide/venv*